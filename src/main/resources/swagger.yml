openapi: 3.0.3
info:
  title: Laura's Store - OpenAPI 3.0
  description: |-
    This is a test to create my first API
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:8080/api/clothes
tags:
  - name: clothes
    description: The clothes you want
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: store
    description: Access to ClothesStore orders
    externalDocs:
      description: Find out more about our store
      url: http://swagger.io
  - name: user
    description: Operations about user
paths:
  /clothes:
    put:
      tags:
        - clothes
      summary: Create nonexistent clothes
      description: Create nonexistent clothes
      operationId: getClothesList
      parameters:
        - in: query
          name: filter
          content:
            application/text:
              schema:
                $ref: '#/components/schemas/CreateClothesRequestDTO'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClothesResponseDTO'
        '400':
          description: Invalid ID supplied
        '404':
          description: Clothes not found
        '422':
          description: Validation exception
    get:
      tags:
        - clothes
      summary: Get existing clothes list
      description: Get existing clothes list
      operationId: getClothesList
      parameters:
        - in: query
          name: filter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClothesListRequestDTO'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClothesListResponseDTO'
        '400':
          description: Invalid ID supplied
        '404':
          description: Clothes not found
        '422':
          description: Validation exception
  /clothes/id:
    get:
      tags:
        - clothes
      summary: Get existing clothes
      description: Get existing clothes
      operationId: getClothes
      parameters:
        - in: query
          name: filter
          content:
            application/text:
              schema:
                $ref: '#/components/schemas/ClothesRequestDTO'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClothesResponseDTO'
        '400':
          description: Invalid ID supplied
        '404':
          description: Clothes not found
        '422':
          description: Validation exception
    put:
      tags:
        - clothes
      summary: Update existing clothes
      description: Update existing clothes
      operationId: updateClothes
      parameters:
        - in: query
          name: filter
          content:
            application/text:
              schema:
                $ref: '#/components/schemas/UpdateClothesRequestDTO'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClothesResponseDTO'
        '400':
          description: Invalid ID supplied
        '404':
          description: Clothes not found
        '422':
          description: Validation exception
    delete:
      tags:
        - pet
      summary: Deletes clothes
      description: delete clothes
      operationId: deleteClothes
      parameters:
        - name: api_key
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: clothesId
          in: path
          description: Clothes id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid clothes value
components:
  schemas:
    #request
    GetClothesListRequestDTO:
      type: object
      properties:
        article:
          type: string
          example: "Shirt"
        size:
          type: string
          maximum: 1
          enum:
            - S
        color:
          type: string
          enum:
            - PINK
    ClothesRequestDTO:
      type: object
      properties:
        article:
          type: string
          example: "Shirt"
        size:
          type: string
          maximum: 1
          enum:
            - S
        color:
          type: string
          enum:
            - PINK
    CreateClothesRequestDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 5
        article:
          type: string
          example: "Shirt"
        size:
          type: string
          maximum: 1
          enum:
            - S
        color:
          type: string
          enum:
            - PINK
    UpdateClothesRequestDTO:
      type: object
      properties:
        article:
          type: string
          example: "Shirt"
        size:
          type: string
          maximum: 1
          enum:
            - S
        color:
          type: string
          enum:
            - PINK
    ClothesResponseDTO:
      type: object
      required:
        - id
        - article
        - size
        - color
      properties:
        id:
          type: integer
          format: int64
          example: 5
        article:
          type: string
          example: "Shirt"
        size:
          type: string
          maximum: 1
          enum:
            - S
        color:
          type: string
          enum:
            - PINK
    ClothesListResponseDTO:
      type: object
      properties:
        clothes:
          type: array
          items:
            $ref: '#/components/schemas/ClothesResponseDTO'
